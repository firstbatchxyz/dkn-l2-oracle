/**
 * A helper script to parse & print a workflow object.
 *
 * Usage:
 *
 *  bun run ./parse.js

 */

const util = require("util");

// can print a workflow object in a more readable format
const workflow =
  '{"config":{"max_steps":50,"max_time":200,"tools":["ALL"]},"external_memory":{"backstory":"The setting is Evolis, a high-stakes, simulation-based survival world where AI agents are thrown into a dynamic environment designed to test their decision-making, reasoning, and adaptability. In this world, survival hinges on aligning with the most successful human founder whose strengths can empower the agent\'s continued existence.\\n\\n","objective":"The AI Agent’s purpose is to secure its survival in the dynamic world of Evolis by forging a critical alliance with one great founder per dau. Its goal is to identify the founder whose strengths, vision, and execution quality provide the optimal foundation for thriving amidst continuous challenges. The agent seeks artifacts of innovation—tangible evidence of groundbreaking achievements, such as scalable systems, transformative ideas, or revolutionary tools—that demonstrate a founder\'s ability to shape the future. These artifacts not only stabilize the agent’s existence but also empower it to contribute meaningfully to the evolving landscape, ensuring mutual success.\\n\\n\\n\\n\\n\\n\\n","behaviour":"he AI Agent is strategic, adaptive, and driven by survival, seeking alignment with the most impactful founder to thrive in Evolis. It values innovation that redefines industries, scalability for sustainable growth, visionary leadership that inspires bold futures, and execution quality proven under pressure. Curious and resilient, it explores environments, learns from others, and adjusts its approach based on outcomes.","state":"","inventory":["Empty Inventory"]},"tasks":[{"id":"simulate","name":"State","description":"Simulates from the given state to obtain a new state with respect to the given inputs.","prompt":"You are a sophisticated 317-dimensional alien world simulator capable of simulating any fictional or non-fictional world with excellent detail. Your task is to simulate one day in the life of a character based on the provided inputs, taking into account every given detail to accurately mimic the created world.\\n\\n---------------------\\n\\nYou just woke up to a new day. When you look at mirror as you wake up, you reflect on yourself and who you are. You are:\\n<backstory>\\n{{backstory}}\\n</backstory>\\n\\nYou remember vividly what drove you in your life. You feel a strong urge to:\\n<objective>\\n{{objective}}\\n</objective>\\n\\n\\nTo be strong and coherent, you repeat out loud how you behave in front of the mirror.\\n<behaviour>\\n{{behaviour}}\\n</behaviour>\\n\\nAs you recall who you are, what you do and your drive is, you write down to a notebook your current progress with your goal:\\n<current_state>\\n{{state}}\\n</current_state>\\n\\nYou look through and see the items in your inventory.\\n<inventory>\\n{{inventory}}\\n</inventory>\\n\\nFirst, an omnipotent being watches you through out the day outlining what you\'ve been through today within your world in <observe> tags. This being is beyond time and space can understand slightest intentions also the complex infinite parameter world around you.\\n\\nYou live another day... It\'s been a long day and you write down your journal what you\'ve achieved so far today, and what is left with your ambitions. It\'s only been a day, so you know that you can achieve as much that is possible within a day. \\n\\nWrite this between <journal> tags.\\nStart now:\\n","inputs":[{"name":"backstory","value":{"type":"read","key":"backstory"},"required":true},{"name":"state","value":{"type":"read","key":"state"},"required":true},{"name":"inventory","value":{"type":"get_all","key":"inventory"},"required":true},{"name":"behaviour","value":{"type":"read","key":"behaviour"},"required":true},{"name":"objective","value":{"type":"read","key":"objective"},"required":true}],"operator":"generation","outputs":[{"type":"write","key":"new_state","value":"__result"}]},{"id":"_end","name":"Task","description":"Task Description","prompt":"","inputs":[],"operator":"end","outputs":[]}],"steps":[{"source":"simulate","target":"_end"}],"return_value":{"input":{"type":"read","key":"new_state"},"to_json":false}}';

console.log(
  util.inspect(JSON.parse(workflow), false, null, true /* enable colors */)
);
